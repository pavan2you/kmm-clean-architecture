apply plugin: 'signing'
apply plugin: 'maven-publish'
apply from: "$rootDir/gradle/publish-properties.gradle"

publishing {

    publications {
        it.withType(MavenPublication) {

            groupId artifactGroupId
            artifactId = artifactIdName
            version = artifactVersionName

            pom {
                name = artifactIdName
                description = artifactDescription
                url = gitProjectUrl

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                scm {
                    connection = "scm:git:github.com/${gitProject}"
                    developerConnection = "scm:git:ssh://github.com/${gitProject}"
                    url = gitProjectUrl
                }

                developers {
                    developer {
                        id.set("pavan2you")
                        name.set("Pavan Kunchapu")
                        email.set("pavan.jvanila@gmail.com")
                    }
                }
            }
        }
    }

    repositories {
        if (enableGithubPublish) {
            maven {
                name = "githubPackages"
                url = "https://maven.pkg.github.com/pavan2you/kmm-clean-architecture"
                credentials {
                    username = githubUser
                    password = githubToken
                }
            }
        }
        if (enableNexusPublish) {
            maven {
                name = "sonaMaven"

                def releaseUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotUrl : releaseUrl

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}

if (enableNexusPublish) {
    signing {
        sign publishing.publications
    }
}


