/*
 * Copyright (C) 2021 The TagD Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply from: "$rootDir/gradle/publish-aar.gradle"

publishing {
    publications {
        it.withType(MavenPublication) {
            pom {
                description = 'The technology agnostic architecture android implementation'
                withXml {
                    def dependencies = asNode().appendNode('dependencies')

                    // include any sibling dependencies
                    def siblingDependencies = [
                            'kmm-tagd-core',
                            'kmm-tagd-arch',
                            'kmm-tagd-di',
                            'kmm-lang-langx',
                            'lang-kotlinx',
                            'lang-androidx'
                    ]
                    siblingDependencies.each {
                        def dependency = dependencies.appendNode('dependency')
                        dependency.appendNode('groupId', artifactGroupId)
                        dependency.appendNode('artifactId', it)
                        dependency.appendNode('version', artifactVersionName)
                    }

                    // include any transitive dependencies
                    configurations.implementation.allDependencies.each {
                        handleDependencies(it, dependencies)
                    }
                    configurations.api.allDependencies.each {
                        handleDependencies(it, dependencies)
                    }
                }
            }
        }
    }
}

private void handleDependencies(Dependency dep, Node dependencies) {

    if (dep.group == null
            || dep.group == 'com.android.databinding'
            || !dep.name.startsWith("kmm-")
            || !dep.name.startsWith("lang-")
            || dep.version == 'unspecified') {
        println("ignoring dependency ${dep.group}:${dep.name}:${dep.version}")
        return
    }

    def dependency = dependencies.appendNode('dependency')
    dependency.appendNode('groupId', dep.group)
    println(dep.group)
    println(dep.version)
    println(dep.name)
    dependency.appendNode('artifactId', dep.name)
    dependency.appendNode('version', dep.version)
}